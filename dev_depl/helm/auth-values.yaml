---
# Default values for microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  replicaCount: 1
  environment:
  # list of key: value
  # GLOBAL1: value

## Set default image, imageTag, and imagePullPolicy.
## ref: https://hub.docker.com/r/apache/nifi/
##

image: skafoldcfg
imageConfig:
  repository:
  tag: latest
  pullPolicy: Always

#command: ['echo pre-install Job Pod is Running']

replicaCount: 1

# command: ["/bin/sh","-c"]
# args: ["echo 'consuming a message'; sleep 5"]

nameOverride: deployment
fullnameOverride: ""
namespace: apps
# Annotation for the Deployment
annotations: {}

#ARGS: both works

# List of services
services:
  - name: web
    type: ClusterIP
    annotations: {}
    specs:
      - port: 3000
        targetPort: 3000
        name: port-svc

#targetPort: is the port the container accepts traffic on,
#port: is the abstracted Service port, which can be any port other pods use to access the Service
#https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.16/#serviceport-v1-core

environment:
  - name: NATS_URL
    valueFrom:
      configMapKeyRef:
        name: nats-configmap
        key: nats_url
  - name: NATS_CLUSTER_ID
    value: pgwas-internal
  - name: NATS_CLIENT_ID
    valueFrom:
      fieldRef: metadata.name
  - name: JWT_KEY
    valueFrom:
      secretKeyRef:
        name: jwt-secret
        key: JWT_KEY
  - name: MONGODB_USER
    valueFrom:
      secretKeyRef:
        name: mongo-secret
        key: mongo-root-username
  - name: MONGODB_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mongo-secret
        key: mongo-root-password
  - name: MONGO_HOST
    valueFrom:
      configMapKeyRef:
        name: pgwasmongo-configmap
        key: database_url
  - name: MONGODB_NAME
    valueFrom:
      secretKeyRef:
        name: mongo-secret
        key: mongo-auth-db
  - name: MONGODB_PODNAME
    value: pgwas-mongo

dbConfigMap: false
eventConfigMap: false
redisConfigMap: false

volumes:
  enabled: false
  pvc:
    enabled: false
    existing_claim:
    name:
    mountPath: /pv
    size: 1G
    class:
    accessModes:
      - ReadWriteOnce

#  configMaps:
#    - name: sqlfile
#      mountPath: /data/sqls
#      data:
#        test.conf: |
#          hello

fileConfigMap:
  # - name: mongofile
  #   volumeName: mdb
  #   mountPath: /etc/config

## Configure Ingress based on the documentation here: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 1
    memory: 2000Mi
  requests:
    cpu: 500m
    memory: 2000Mi

enableInitContainers: false
initContainers:
  init:
    name: checkservice
    image: busybox:1.28
    command: [ 'sh', '-c', "until nslookup auth-mongo-service-web.dbs; do echo waiting for mongodb service; sleep 2; done" ]
#    command: [ "/bin/sh", "-c", "ls -l /etc/config" ]
#    command: [ 'sh', '-c', "until nslookup nats-event-broker-svc-web; do echo waiting for nats service; sleep 2; done" ]
#  createdb:
#    name: createdb
#    image: mongo
#    env:
#      - name: MONGO_HOST
#        valueFrom:
#        configMapKeyRef:
#          name: authmongo-configmap
#          key: database_url
#      - name: MONGODB_USER
#        valueFrom:
#        secretKeyRef:
#          name: mongo-secret
#          key: mongo-root-username
#      - name: MONGODB_PASSWORD
#        valueFrom:
#        secretKeyRef:
#          name: mongo-secret
#          key: mongo-root-password
#      - name: MONGODB_NAME
#        valueFrom:
#        secretKeyRef:
#          name: mongo-secret
#          key: mongo-auth-db
#    command:
#      - "mongo"
#      - "authmongo-database-svc-web.dbs"
#      - "/etc/config/init_mongo_db.js"
#    volumeMount:
#      name: db-volume
#      mountPath: /etc/config
